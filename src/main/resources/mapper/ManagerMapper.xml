<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zime.maven.dao.ManagerMapper">
  <resultMap id="BaseResultMap" type="com.zime.maven.entity.Manager">
    <id column="m_id" jdbcType="INTEGER" property="mId" />
    <result column="m_name" jdbcType="VARCHAR" property="mName" />
    <result column="m_username" jdbcType="VARCHAR" property="mUsername" />
    <result column="m_password" jdbcType="VARCHAR" property="mPassword" />
    <result column="m_gender" jdbcType="VARCHAR" property="mGender" />
    <result column="m_phone" jdbcType="VARCHAR" property="mPhone" />
    <result column="m_level" jdbcType="INTEGER" property="mLevel" />
  </resultMap>
  
  <resultMap id="WithLevelResultMap" type="com.zime.maven.entity.Manager">
    <id column="m_id" jdbcType="INTEGER" property="mId" />
    <result column="m_name" jdbcType="VARCHAR" property="mName" />
    <result column="m_username" jdbcType="VARCHAR" property="mUsername" />
    <result column="m_password" jdbcType="VARCHAR" property="mPassword" />
    <result column="m_gender" jdbcType="VARCHAR" property="mGender" />
    <result column="m_phone" jdbcType="VARCHAR" property="mPhone" />
    <result column="m_level" jdbcType="INTEGER" property="mLevel" />
    <association property="level" javaType="com.zime.maven.entity.Level">
    	<id column="le_id" property="leId"/>
    	<result column="le_Name" property="leName"/>
    </association>
  </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    m_id, m_name, m_username, m_password, m_gender, m_phone, m_level
  </sql>
  
  <!-- 带等级的 -->
  <sql id="WithLevel_Column_List">
    m.m_id, m.m_name, m.m_username, m.m_password, m.m_gender, m.m_phone, m.m_level, l.le_id, l.le_name
  </sql>
  
  
  <select id="selectByExampleWithLevel" resultMap="WithLevelResultMap">
  	select
    <if test="distinct">
      distinct
    </if>
    <include refid="WithLevel_Column_List" />
    FROM book_manager m LEFT OUTER JOIN book_level l on m.m_level=l.le_id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKeyWithLevel" resultMap="WithLevelResultMap">
  	select 
    <include refid="WithLevel_Column_List" />
    FROM book_manager m LEFT OUTER JOIN book_level l on m.m_level=l.le_id
    where ID = #{id,jdbcType=INTEGER}
  </select>
  
  
  <select id="selectByExample" parameterType="com.zime.maven.entity.ManagerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book_manager
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book_manager
    where m_id = #{mId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from book_manager
    where m_id = #{mId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zime.maven.entity.ManagerExample">
    delete from book_manager
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zime.maven.entity.Manager">
    insert into book_manager (m_id, m_name, m_username, 
      m_password, m_gender, m_phone, 
      m_level)
    values (#{mId,jdbcType=INTEGER}, #{mName,jdbcType=VARCHAR}, #{mUsername,jdbcType=VARCHAR}, 
      #{mPassword,jdbcType=VARCHAR}, #{mGender,jdbcType=VARCHAR}, #{mPhone,jdbcType=VARCHAR}, 
      #{mLevel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zime.maven.entity.Manager">
    insert into book_manager
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="mId != null">
        m_id,
      </if>
      <if test="mName != null">
        m_name,
      </if>
      <if test="mUsername != null">
        m_username,
      </if>
      <if test="mPassword != null">
        m_password,
      </if>
      <if test="mGender != null">
        m_gender,
      </if>
      <if test="mPhone != null">
        m_phone,
      </if>
      <if test="mLevel != null">
        m_level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="mId != null">
        #{mId,jdbcType=INTEGER},
      </if>
      <if test="mName != null">
        #{mName,jdbcType=VARCHAR},
      </if>
      <if test="mUsername != null">
        #{mUsername,jdbcType=VARCHAR},
      </if>
      <if test="mPassword != null">
        #{mPassword,jdbcType=VARCHAR},
      </if>
      <if test="mGender != null">
        #{mGender,jdbcType=VARCHAR},
      </if>
      <if test="mPhone != null">
        #{mPhone,jdbcType=VARCHAR},
      </if>
      <if test="mLevel != null">
        #{mLevel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zime.maven.entity.ManagerExample" resultType="java.lang.Long">
    select count(*) from book_manager
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update book_manager
    <set>
      <if test="record.mId != null">
        m_id = #{record.mId,jdbcType=INTEGER},
      </if>
      <if test="record.mName != null">
        m_name = #{record.mName,jdbcType=VARCHAR},
      </if>
      <if test="record.mUsername != null">
        m_username = #{record.mUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.mPassword != null">
        m_password = #{record.mPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.mGender != null">
        m_gender = #{record.mGender,jdbcType=VARCHAR},
      </if>
      <if test="record.mPhone != null">
        m_phone = #{record.mPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.mLevel != null">
        m_level = #{record.mLevel,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update book_manager
    set m_id = #{record.mId,jdbcType=INTEGER},
      m_name = #{record.mName,jdbcType=VARCHAR},
      m_username = #{record.mUsername,jdbcType=VARCHAR},
      m_password = #{record.mPassword,jdbcType=VARCHAR},
      m_gender = #{record.mGender,jdbcType=VARCHAR},
      m_phone = #{record.mPhone,jdbcType=VARCHAR},
      m_level = #{record.mLevel,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zime.maven.entity.Manager">
    update book_manager
    <set>
      <if test="mName != null">
        m_name = #{mName,jdbcType=VARCHAR},
      </if>
      <if test="mUsername != null">
        m_username = #{mUsername,jdbcType=VARCHAR},
      </if>
      <if test="mPassword != null">
        m_password = #{mPassword,jdbcType=VARCHAR},
      </if>
      <if test="mGender != null">
        m_gender = #{mGender,jdbcType=VARCHAR},
      </if>
      <if test="mPhone != null">
        m_phone = #{mPhone,jdbcType=VARCHAR},
      </if>
      <if test="mLevel != null">
        m_level = #{mLevel,jdbcType=INTEGER},
      </if>
    </set>
    where m_id = #{mId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zime.maven.entity.Manager">
    update book_manager
    set m_name = #{mName,jdbcType=VARCHAR},
      m_username = #{mUsername,jdbcType=VARCHAR},
      m_password = #{mPassword,jdbcType=VARCHAR},
      m_gender = #{mGender,jdbcType=VARCHAR},
      m_phone = #{mPhone,jdbcType=VARCHAR},
      m_level = #{mLevel,jdbcType=INTEGER}
    where m_id = #{mId,jdbcType=INTEGER}
  </update>
</mapper>