<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zime.maven.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.zime.maven.entity.User">
    <id column="u_id" jdbcType="INTEGER" property="uId" />
    <result column="u_name" jdbcType="VARCHAR" property="uName" />
    <result column="u_username" jdbcType="VARCHAR" property="uUsername" />
    <result column="u_password" jdbcType="VARCHAR" property="uPassword" />
    <result column="u_gender" jdbcType="VARCHAR" property="uGender" />
    <result column="u_num" jdbcType="INTEGER" property="uNum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    u_id, u_name, u_username, u_password, u_gender, u_num
  </sql>
  <select id="selectByExample" parameterType="com.zime.maven.entity.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book_user
    where u_id = #{uId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from book_user
    where u_id = #{uId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zime.maven.entity.UserExample">
    delete from book_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zime.maven.entity.User">
    insert into book_user (u_id, u_name, u_username, 
      u_password, u_gender, u_num
      )
    values (#{uId,jdbcType=INTEGER}, #{uName,jdbcType=VARCHAR}, #{uUsername,jdbcType=VARCHAR}, 
      #{uPassword,jdbcType=VARCHAR}, #{uGender,jdbcType=VARCHAR}, #{uNum,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zime.maven.entity.User">
    insert into book_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uId != null">
        u_id,
      </if>
      <if test="uName != null">
        u_name,
      </if>
      <if test="uUsername != null">
        u_username,
      </if>
      <if test="uPassword != null">
        u_password,
      </if>
      <if test="uGender != null">
        u_gender,
      </if>
      <if test="uNum != null">
        u_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uId != null">
        #{uId,jdbcType=INTEGER},
      </if>
      <if test="uName != null">
        #{uName,jdbcType=VARCHAR},
      </if>
      <if test="uUsername != null">
        #{uUsername,jdbcType=VARCHAR},
      </if>
      <if test="uPassword != null">
        #{uPassword,jdbcType=VARCHAR},
      </if>
      <if test="uGender != null">
        #{uGender,jdbcType=VARCHAR},
      </if>
      <if test="uNum != null">
        #{uNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zime.maven.entity.UserExample" resultType="java.lang.Long">
    select count(*) from book_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update book_user
    <set>
      <if test="record.uId != null">
        u_id = #{record.uId,jdbcType=INTEGER},
      </if>
      <if test="record.uName != null">
        u_name = #{record.uName,jdbcType=VARCHAR},
      </if>
      <if test="record.uUsername != null">
        u_username = #{record.uUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.uPassword != null">
        u_password = #{record.uPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.uGender != null">
        u_gender = #{record.uGender,jdbcType=VARCHAR},
      </if>
      <if test="record.uNum != null">
        u_num = #{record.uNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update book_user
    set u_id = #{record.uId,jdbcType=INTEGER},
      u_name = #{record.uName,jdbcType=VARCHAR},
      u_username = #{record.uUsername,jdbcType=VARCHAR},
      u_password = #{record.uPassword,jdbcType=VARCHAR},
      u_gender = #{record.uGender,jdbcType=VARCHAR},
      u_num = #{record.uNum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zime.maven.entity.User">
    update book_user
    <set>
      <if test="uName != null">
        u_name = #{uName,jdbcType=VARCHAR},
      </if>
      <if test="uUsername != null">
        u_username = #{uUsername,jdbcType=VARCHAR},
      </if>
      <if test="uPassword != null">
        u_password = #{uPassword,jdbcType=VARCHAR},
      </if>
      <if test="uGender != null">
        u_gender = #{uGender,jdbcType=VARCHAR},
      </if>
      <if test="uNum != null">
        u_num = #{uNum,jdbcType=INTEGER},
      </if>
    </set>
    where u_id = #{uId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zime.maven.entity.User">
    update book_user
    set u_name = #{uName,jdbcType=VARCHAR},
      u_username = #{uUsername,jdbcType=VARCHAR},
      u_password = #{uPassword,jdbcType=VARCHAR},
      u_gender = #{uGender,jdbcType=VARCHAR},
      u_num = #{uNum,jdbcType=INTEGER}
    where u_id = #{uId,jdbcType=INTEGER}
  </update>
</mapper>